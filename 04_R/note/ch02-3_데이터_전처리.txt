3장. dplyr을 이용한 데이터 전처리 

파이프 연산자 (ctrl + shift +m) :  전처리 각 단계를 %>% 로 이어주며, 가독성을 높임. 

1. filter( 조건식 ) 

조건식에 맞는, 원하는 행을 추출한다. 

2. select( 조건식 또는 열 이름 )

원하는 조건에 맞는 열을 추출한다. 

3. arrange(변수명/칼럼명)

해당 변수의 내림차순 또는 오름차순으로 데이터를 정렬한다. 

4. mutate( 파생변수 = 생성식 ) 

새로운 파생 변수 칼럼을 생성한다. 

5. rename( new 칼럼명 = 기존의 칼럼명 ) 

열의 명칭을 바꾸고 싶을 때 사용한다. 

6. group_by( 기준 칼럼 변수명 ) 

보통 summarise( ) 함수 전에 작성을 해서 그룹별로 summarise( )를 통해 통계치를 계산한다. 

7. summarise( 임시변수 = 생성식 ) 

mean( ), sd( )... 등등을 이용해 통계 요약치를 생성하고 임시변수에 넣어준다. 이때 생성된 변수는 말 그대로 임시 변수라 데이터 세트 내에 작업이 끝나면 사라짐.

8. left_join( 테이블1, 테이블2, by=기준열 ) 

기준열 (공통된 열)을 기준으로 두 테이블을 합친다. -> cbind( )로 두 테이블을 합친다 하면 기준열이 2번이나 테이블에 나타나게 되는데, left_join( )의 경우 중복되는 기준열은 한번만 나타난다  

테이블1과 테이블2의 행의 수가 일치 하지 않는 경우 : cbind( )는 오류가 난다. 반면 left_join( )은 기준열의 key값에 따라 데이터를 중복시켜 행의 수를 맞추고 두 테이블을 합친다.  

9. bind_rows( )

rbind( ) -> 결합하는 두 테이블의 열의 수, 이름이 모두 일치해야 결합이 된다. 아니면 오류 발생 

bind_rows( ) -> 이름이 일치 하지 않는 열이 있어도 NA로 해당 열을 채우고 결합시킴.    ** merger(테이블1, 테이블2, all =TRUE) 와 결과가 같음 


10. 결측치, 이상치 처리. 

결측치 : is.na( ) 와 colSum(is.na( ))등을 이용하여 칼럼 별 결측치를 파악하고 처리를 해준다. 

-> 데이터의 갯수가 많다면 결측치 있는 행을 제거 해주는 것도 방법임. 보통은 결측치는 수치형일 경우 데이터의 중앙값으로 대체한다. 

이상치 : 수치형 변수일 경우 boxplot을 그려서 이상치를 파악하는 것이 가장 쉽다. 
	
           범주형 변수 일 경우 factor( ) 함수를 통해서 level을 지정해주면, level에 해당하지 않는 범주는 NA 값으로 대체된다. 

          table( is.na( ) )를 활용하면 결측치 값의 현황을 손쉽게 파악할 수 있다. 


