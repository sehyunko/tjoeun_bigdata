3장. 메소드의 이해 

절차 지향 프로그래밍 -> 입력값이 바뀔떄마다 동일한 로직의 코드를 반복적으로 작성해야 해서 비효율성이 증대

메소드(method) -> 기존의 절차 지향 프로그래밍의 비효율성을 극복하고자, 로직만 만들어 놓고, 그때 그때 데이터 값만을 주어 결과값을 반환하게 만듬. 

객체 지향 프로그래밍 -> 메소드의 양이 증대됨에 따라, 비슷한 일을 수행하는 메소드들을 클래스(class)에 모아 놓고 작업이 필요할 때마다 호출하여 사용

1. 메소드 작성 구문 

접근제한자(public, private, default....) [static: 공유 영역에 저장되어 객체를 생성할 필요없이 호출가능] 리턴type 메소드명(매개변수){
	처리할 프로세스에 관한 코드
	return 리턴할 값;  (리턴할 type이 없는 경우 void) 
} 